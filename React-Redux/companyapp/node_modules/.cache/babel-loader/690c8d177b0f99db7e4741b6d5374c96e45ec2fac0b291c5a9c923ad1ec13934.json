{"ast":null,"code":"import { MAKE_REQ, OPEN_POPUP, REQ_ADD_SUCC, REQ_DELETE_SUCC, REQ_GETALL_FAIL, REQ_GETALL_SUCC, REQ_GETBYCODE_SUCC, REQ_UPDATE_SUCC } from \"./ActionType\";\nexport const initialstate = {\n  isloading: false,\n  companylist: [],\n  companyobj: {},\n  errormessage: ''\n};\nexport const CompanyReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case MAKE_REQ:\n      return {\n        ...state,\n        isloading: true\n      };\n    case REQ_GETALL_SUCC:\n      return {\n        ...state,\n        isloading: false,\n        companylist: action.payload\n      };\n    case REQ_GETBYCODE_SUCC:\n      return {\n        ...state,\n        companyobj: action.payload\n      };\n    case REQ_GETALL_FAIL:\n      return {\n        ...state,\n        isloading: false,\n        companylist: [],\n        errormessage: action.payload\n      };\n    case OPEN_POPUP:\n      return {\n        ...state,\n        companyobj: {}\n      };\n    case REQ_ADD_SUCC:\n      const _inputdata = {\n        ...action.payload\n      };\n      const _maxid = Math.max(...state.companylist.map(o => o.id));\n      _inputdata.id = _maxid + 1;\n      return {\n        ...state,\n        companylist: [...state.companylist, _inputdata]\n      };\n    case REQ_UPDATE_SUCC:\n      const _data = {\n        ...action.payload\n      };\n      const _finaldata = state.companylist.map(item => {\n        return item.id === _data.id ? _data : item;\n      });\n      return {\n        ...state,\n        companylist: _finaldata\n      };\n    case REQ_DELETE_SUCC:\n      const _filterdata = state.companylist.filter(data => {\n        return data.id !== action.payload;\n      });\n      return {\n        ...state,\n        companylist: _filterdata\n      };\n    default:\n      return state;\n  }\n};\n_c = CompanyReducer;\nvar _c;\n$RefreshReg$(_c, \"CompanyReducer\");","map":{"version":3,"names":["MAKE_REQ","OPEN_POPUP","REQ_ADD_SUCC","REQ_DELETE_SUCC","REQ_GETALL_FAIL","REQ_GETALL_SUCC","REQ_GETBYCODE_SUCC","REQ_UPDATE_SUCC","initialstate","isloading","companylist","companyobj","errormessage","CompanyReducer","state","action","type","payload","_inputdata","_maxid","Math","max","map","o","id","_data","_finaldata","item","_filterdata","filter","data","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/React/React-Redux/companyapp/src/Redux/Reducer.js"],"sourcesContent":["import { MAKE_REQ, OPEN_POPUP, REQ_ADD_SUCC, REQ_DELETE_SUCC, REQ_GETALL_FAIL, REQ_GETALL_SUCC, REQ_GETBYCODE_SUCC, REQ_UPDATE_SUCC } from \"./ActionType\"\r\n\r\nexport const initialstate = {\r\n    isloading: false,\r\n    companylist: [],\r\n    companyobj: {},\r\n    errormessage: ''\r\n}\r\n\r\nexport const CompanyReducer = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n        case MAKE_REQ:\r\n            return {\r\n                ...state,\r\n                isloading: true\r\n            }\r\n        case REQ_GETALL_SUCC:\r\n            return {\r\n                ...state,\r\n                isloading: false,\r\n                companylist: action.payload\r\n            }\r\n        case REQ_GETBYCODE_SUCC:\r\n            return {\r\n                ...state,\r\n                companyobj: action.payload\r\n            }\r\n        case REQ_GETALL_FAIL:\r\n            return {\r\n                ...state,\r\n                isloading: false,\r\n                companylist: [],\r\n                errormessage: action.payload\r\n            }\r\n        case OPEN_POPUP:\r\n            return {\r\n                ...state,\r\n                companyobj: {}\r\n            }\r\n        case REQ_ADD_SUCC:\r\n            const _inputdata = { ...action.payload };\r\n            const _maxid = Math.max(...state.companylist.map(o => o.id));\r\n            _inputdata.id = _maxid + 1;\r\n            return {\r\n                ...state,\r\n                companylist: [...state.companylist, _inputdata]\r\n            }\r\n        case REQ_UPDATE_SUCC:\r\n            const _data = { ...action.payload };\r\n            const _finaldata = state.companylist.map(item => {\r\n                return item.id === _data.id ? _data : item\r\n            });\r\n            return {\r\n                ...state,\r\n                companylist: _finaldata\r\n            }\r\n        case REQ_DELETE_SUCC:\r\n            const _filterdata = state.companylist.filter((data) => {\r\n                return data.id !== action.payload\r\n            })\r\n            return {\r\n                ...state,\r\n                companylist: _filterdata\r\n            }\r\n        default: return state;\r\n    }\r\n}"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,YAAY,EAAEC,eAAe,EAAEC,eAAe,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,cAAc;AAEzJ,OAAO,MAAMC,YAAY,GAAG;EACxBC,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAE,EAAE;EACfC,UAAU,EAAE,CAAC,CAAC;EACdC,YAAY,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKhB,QAAQ;MACT,OAAO;QACH,GAAGc,KAAK;QACRL,SAAS,EAAE;MACf,CAAC;IACL,KAAKJ,eAAe;MAChB,OAAO;QACH,GAAGS,KAAK;QACRL,SAAS,EAAE,KAAK;QAChBC,WAAW,EAAEK,MAAM,CAACE;MACxB,CAAC;IACL,KAAKX,kBAAkB;MACnB,OAAO;QACH,GAAGQ,KAAK;QACRH,UAAU,EAAEI,MAAM,CAACE;MACvB,CAAC;IACL,KAAKb,eAAe;MAChB,OAAO;QACH,GAAGU,KAAK;QACRL,SAAS,EAAE,KAAK;QAChBC,WAAW,EAAE,EAAE;QACfE,YAAY,EAAEG,MAAM,CAACE;MACzB,CAAC;IACL,KAAKhB,UAAU;MACX,OAAO;QACH,GAAGa,KAAK;QACRH,UAAU,EAAE,CAAC;MACjB,CAAC;IACL,KAAKT,YAAY;MACb,MAAMgB,UAAU,GAAG;QAAE,GAAGH,MAAM,CAACE;MAAQ,CAAC;MACxC,MAAME,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGP,KAAK,CAACJ,WAAW,CAACY,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC,CAAC;MAC5DN,UAAU,CAACM,EAAE,GAAGL,MAAM,GAAG,CAAC;MAC1B,OAAO;QACH,GAAGL,KAAK;QACRJ,WAAW,EAAE,CAAC,GAAGI,KAAK,CAACJ,WAAW,EAAEQ,UAAU;MAClD,CAAC;IACL,KAAKX,eAAe;MAChB,MAAMkB,KAAK,GAAG;QAAE,GAAGV,MAAM,CAACE;MAAQ,CAAC;MACnC,MAAMS,UAAU,GAAGZ,KAAK,CAACJ,WAAW,CAACY,GAAG,CAACK,IAAI,IAAI;QAC7C,OAAOA,IAAI,CAACH,EAAE,KAAKC,KAAK,CAACD,EAAE,GAAGC,KAAK,GAAGE,IAAI;MAC9C,CAAC,CAAC;MACF,OAAO;QACH,GAAGb,KAAK;QACRJ,WAAW,EAAEgB;MACjB,CAAC;IACL,KAAKvB,eAAe;MAChB,MAAMyB,WAAW,GAAGd,KAAK,CAACJ,WAAW,CAACmB,MAAM,CAAEC,IAAI,IAAK;QACnD,OAAOA,IAAI,CAACN,EAAE,KAAKT,MAAM,CAACE,OAAO;MACrC,CAAC,CAAC;MACF,OAAO;QACH,GAAGH,KAAK;QACRJ,WAAW,EAAEkB;MACjB,CAAC;IACL;MAAS,OAAOd,KAAK;EACzB;AACJ,CAAC;AAAAiB,EAAA,GAzDYlB,cAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}